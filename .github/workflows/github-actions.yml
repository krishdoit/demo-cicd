# build.yml
on:
  pull_request:
    #paths:
    #- application/**
  push:
    #paths:
    #- application/**
    branches:         
    - master          # triggers on pushes that contain changes in master

name: setup the environment variables

env:
  AWS_DEFAULT_REGION: ap-southeast-1
  AWS_DEFAULT_OUTPUT: json
  AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  EKS_CLUSTER_NAME: eks-cluster

jobs:
  build-push-deploy:
    name: build container and deploy to eks
    runs-on: ubuntu-latest

    steps:
    - name: checkout
      uses: actions/checkout@v2
    
    - name: install pre-requisites for containerized apps deployment
      run: sh provision.sh
      
    - name: configure aws credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-southeast-1

    - name: login to aws ecr
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: build, tag and push the image to ecr
      id: build-image
      env:
        ECR_REGISTRY: ${{ secrets.ECR_REGISTRY }}
        ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        # build container and push to ecr repo
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        echo "build completed"

    - name: setup eks kubeconfig
      id: setup-eks-kube-config
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      run: |
        aws eks --region $AWS_REGION update-kubeconfig --name $EKS_CLUSTER_NAME
       
       
    - name: deploy application onto eks
      id: deploy-comryde-app
      run: |
       # kubernetes maintains the deployment config state thus apply would do the updates only if new changes
        sed -i'' -e 's/ECR_REG/${{ secrets.ECR_REGISTRY }}/g' -e 's/ECR_REPO/${{ secrets.ECR_REPOSITORY }}/g' -e 's/IMAGE_TAG/${{ github.sha }}/g' manifests/comryde-app/deployment.yml
        kubectl apply -f manifests/comryde-app/deployment.yml
        kubectl apply -f manifests/comryde-app/service.yml
      
    - name: deploy ingres resource with tls termination for security
      id: deploy-ingres-resource
      run: |
       # kubernetes maintains the deployment config state thus apply would do the updates only if new changes
        kubectl apply -f manifests/ingress-resource-app-service/ingress-secret.yml
        kubectl apply -f manifests/ingress-resource-app-service/ingress-resource.yml
